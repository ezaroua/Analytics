AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM template for CSV Analyzer project

Globals:
  Function:
    Runtime: python3.9
    Timeout: 60
    MemorySize: 256

Resources:
  # Processing Layer for pandas and other dependencies
  ProcessingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: csv-analyzer-processing-layer
      Description: Layer for pandas and data processing dependencies
      ContentUri: layers/processing_layer/
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

  # S3 Bucket for storing CSV files and analysis results
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: csv-analyzer-bucket
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: ["*"]
            MaxAge: 3000

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CSV_Analyzer_Lambda_Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CSV_Analyzer_Lambda_Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action: s3:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt AnalysisTable.Arn
                  - !Sub "${AnalysisTable.Arn}/index/*"

  AnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: fileId
          AttributeType: S
      KeySchema:
        - AttributeName: fileId
          KeyType: HASH

  # Lambda Functions
  FileProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: src/
      Handler: functions/file_processor/app.lambda_handler
      Layers:
        - !Ref ProcessingLayer
      Events:
        FileUploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref StorageBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  ApiHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: !GetAtt LambdaExecutionRole.Arn
      CodeUri: src/
      Handler: functions/api_handler/app.lambda_handler
      Layers:
        - !Ref ProcessingLayer
      Events:
        GetAllAnalyses:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /analyses
            Method: GET
        GetAnalysisById:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /analyses/{fileId}
            Method: GET
        UploadFile:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /upload
            Method: POST

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/"
  BucketName:
    Description: S3 Bucket for file storage
    Value: !Ref StorageBucket
