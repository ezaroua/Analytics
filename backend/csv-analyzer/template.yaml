AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: SAM template for CSV Analysis project

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Stage/Environment for the stack

Globals:
  Function:
    Runtime: python3.9
    Timeout: 60
    MemorySize: 256
    Environment:
      Variables:
        STAGE: !Ref Stage
        POWERTOOLS_SERVICE_NAME: csv-analyzer
        POWERTOOLS_LOGGER_LOG_EVENT: true

Resources:
  # S3 Bucket for CSV files
  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-uploads-${Stage}"
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: [GET, PUT, POST]
            AllowedOrigins: ["*"] # Restrict this in production
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            ExpirationInDays: 30

  # DynamoDB Table for analysis results
  AnalysisTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-analysis-${Stage}"
      AttributeDefinitions:
        - AttributeName: fileId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: fileId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: false

  # Lambda Functions
  # 1. API Handler Lambda
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/api_handler/
      Handler: app.lambda_handler
      Description: API Handler for CSV Analyzer
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref UploadBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref AnalysisTable
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref UploadBucket
          ANALYSIS_TABLE: !Ref AnalysisTable
      Events:
        GetAnalyses:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /analyses
            Method: GET
        GetAnalysis:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /analyses/{fileId}
            Method: GET
        GetUploadUrl:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /upload
            Method: POST

  # 2. CSV Processor Lambda
  ProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/file_processor/
      Handler: app.lambda_handler
      Description: CSV File Processor
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref UploadBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref AnalysisTable
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref UploadBucket
          ANALYSIS_TABLE: !Ref AnalysisTable
      Events:
        S3Upload:
          Type: S3
          Properties:
            Bucket: !Ref UploadBucket
            Events: s3:ObjectCreated:*

  # Bucket Policy
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref UploadBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowLambdaAccess
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - s3:GetObject
            Resource: !Sub "${UploadBucket.Arn}/*"
          - Sid: AllowAPIGatewayAccess
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub "${UploadBucket.Arn}/*"

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"

  UploadBucketName:
    Description: "S3 bucket for file uploads"
    Value: !Ref UploadBucket

  UploadBucketArn:
    Description: "S3 bucket ARN"
    Value: !GetAtt UploadBucket.Arn

  AnalysisTableName:
    Description: "DynamoDB table name"
    Value: !Ref AnalysisTable

  AnalysisTableArn:
    Description: "DynamoDB table ARN"
    Value: !GetAtt AnalysisTable.Arn

  ApiHandlerFunction:
    Description: "API Handler Lambda Function ARN"
    Value: !GetAtt ApiFunction.Arn

  ProcessorFunction:
    Description: "CSV Processor Lambda Function ARN"
    Value: !GetAtt ProcessorFunction.Arn
